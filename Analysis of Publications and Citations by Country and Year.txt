import pandas as pd
import matplotlib.pyplot as plt

# Carregar o arquivo CSV com o delimitador correto
file_path = 'CodigoTeste.csv'  # Certifique-se de que o nome do arquivo esteja correto
df = pd.read_csv(file_path, delimiter=';')

# Verificar os nomes das colunas
print("Nomes das colunas no DataFrame:", df.columns)

# Ajustar os nomes das colunas se necessário
df.columns = df.columns.str.strip()

# Criar um dicionário de siglas dos países
country_abbreviations = {
    'Algeria': 'DZ', 'Australia': 'AU', 'Austria': 'AT', 'Belgium': 'BE', 'Brazil': 'BR', 'Canada': 'CA',
    'China': 'CN', 'Colombia': 'CO', 'Czech Republic': 'CZ', 'Ecuador': 'EC', 'Egypt': 'EG', 'Finland': 'FI',
    'France': 'FR', 'Germany': 'DE', 'Greece': 'GR', 'Hong Kong': 'HK', 'Hungary': 'HU', 'India': 'IN',
    'Indonesia': 'ID', 'Iran': 'IR', 'Ireland': 'IE', 'Italy': 'IT', 'Japan': 'JP', 'Malaysia': 'MY',
    'Mexico': 'MX', 'Morocco': 'MA', 'Netherlands': 'NL', 'Nigeria': 'NG', 'Norway': 'NO', 'Oman': 'OM',
    'Pakistan': 'PK', 'Palestine': 'PS', 'Poland': 'PL', 'Portugal': 'PT', 'Qatar': 'QA', 'Republic of Korea': 'KR',
    'Russia': 'RU', 'Saudi Arabia': 'SA', 'Serbia': 'RS', 'Singapore': 'SG', 'South Africa': 'ZA', 'Spain': 'ES',
    'Sweden': 'SE', 'Switzerland': 'CH', 'Taiwan': 'TW', 'Thailand': 'TH', 'Tunisia': 'TN', 'Turkey': 'TR',
    'UK': 'GB', 'USA': 'US', 'United Arab Emirates': 'AE', 'United Kingdom': 'GB', 'United States': 'US', 'Vietnam': 'VN'
}

# Substituir os nomes dos países pelas siglas
df['Country'] = df['Country'].map(country_abbreviations)

# Pivotar a tabela para obter a contagem de publicações por país e ano
if 'Country' in df.columns and 'Year' in df.columns:
    publications_pivot = df.pivot_table(index='Country', columns='Year', aggfunc='size', fill_value=0)

    # Calcular as citações totais por ano
    total_citations_per_year = df.groupby('Year')['Citations'].sum()

    # Filtrar países com mais de 10 publicações
    filtered_pivot = publications_pivot[publications_pivot.sum(axis=1) > 10]

    # Visualizar a tabela de publicações por país e ano
    print(filtered_pivot)

    # Salvar a tabela em um arquivo CSV se necessário
    filtered_pivot.to_csv('filtered_publications_by_country_year.csv')

    # Dicionário para mapear siglas de volta para nomes completos
    abbreviations_to_country = {v: k for k, v in country_abbreviations.items()}

    # Plotar o gráfico de linha de tempo
    fig, ax1 = plt.subplots(figsize=(14, 8))

    for country in filtered_pivot.index:
        ax1.plot(filtered_pivot.columns, filtered_pivot.loc[country], marker='o', label=f"{country} - {abbreviations_to_country[country]}")

    ax1.set_title('Publications and Citations by Country and Year (Countries with >10 Publications)')
    ax1.set_xlabel('Year')
    ax1.set_ylabel('Number of Publications')
    ax1.legend(title='Countries', loc='upper right', bbox_to_anchor=(0.32, 1), ncol=2)
    ax1.grid(True)
    ax1.set_xticks(range(2004, 2025, 1))  # Exibir anos completos no eixo x

    # Adicionar informações de país e quantidade de publicações acima do ponto com mais publicações em cada ano
    for year in filtered_pivot.columns:
        max_publications = filtered_pivot[year].max()
        if max_publications > 0:
            max_country = filtered_pivot[year].idxmax()
            ax1.text(year, max_publications + 0.5, f'{max_country}: {max_publications}', fontsize=10, ha='center', va='bottom')

    # Plotar o número total de citações por ano em um eixo y secundário
    ax2 = ax1.twinx()
    ax2.plot(total_citations_per_year.index, total_citations_per_year.values, color='black', linestyle='--', marker='x', alpha=0.6, label='Total Citations')
    ax2.set_ylabel('Total Citations')

    # Adicionar a legenda para as citações totais
    ax2.legend(loc='upper left', bbox_to_anchor=(0.005, 0.77))

    plt.show()

else:
    print("As colunas 'Country' e 'Year' não foram encontradas no DataFrame.")
